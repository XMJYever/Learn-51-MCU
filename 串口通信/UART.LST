C51 COMPILER V9.00   UART                                                                  03/16/2020 21:38:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN UART.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE UART.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          定时器0工作模式1 16位定时计数
   3          数码管动态显示0-10，每隔1秒显示一次
   4          */
   5          /*********************************************************************************
   6          * 【作    者】：        清翔电子:向量
   7          * 【版    本】：        V1.0
   8          * 【网    站】：        http://www.qxmcu.com/ 
   9          * 【淘宝店铺】：        http://qxmcu.taobao.com/
  10          * 【实验平台】：        清翔 QX-MCS51 单片机开发板
  11          * 【外部晶振】：        11.0592mhz      
  12          * 【主控芯片】：        STC89C52
  13          * 【编译环境】：        Keil μVisio4   
  14          * 【程序功能】：        定时器0工作模式1 16位定时计数，中断方式响应。
  15                                                  三位数码管动态扫描，定时器0中断方式扫描。                                                                           
  16          * 【使用说明】：        按下S2按键数码管值加一，最大加到120.
  17                                                  按下S3数码管值减一，最小减到0.
  18          **********************************************************************************/
  19          #include <reg52.h>
  20          #include <stdio.h>
  21          #include <intrins.h>
  22          
  23          #define uint unsigned int
  24          #define uchar unsigned char
  25          
  26          sbit DU = P2^6;//数码管段选
  27          sbit WE = P2^7;//数码管段选
  28          sbit key_s2 = P3^0;//独立按键S2
  29          sbit key_s3 = P3^1;//独立按键S3
  30          uchar num;//数码管显示的值
  31          uchar mSec, Sec;//毫秒和秒储存变量
  32          
  33          //共阴数码管段选表0-9
  34          uchar code SMGduan[]= {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F,};
  35          //数码管位选码
  36          uchar code SMGwei[] = {0xfe, 0xfd, 0xfb};
  37          
  38          /*====================================
  39          函数    ： delay(uint z)
  40          参数    ：z 延时毫秒设定，取值范围0-65535
  41          返回值  ：无
  42          描述    ：12T/Fosc11.0592M毫秒级延时
  43          ====================================*/
  44          void delay(uint z)
  45          {
  46   1              uint x,y;
  47   1              for(x = z; x > 0; x--)
  48   1                      for(y = 114; y > 0 ; y--);              
  49   1      } 
  50          
  51          /*====================================
  52          函数    ：display(uchar i)
  53          参数    ：i 显示数值，取值范围0-255
  54          返回值  ：无
  55          描述    ：三位共阴数码管动态显示
C51 COMPILER V9.00   UART                                                                  03/16/2020 21:38:21 PAGE 2   

  56          ====================================*/
  57          void display(uchar i)
  58          {
  59   1              static uchar wei;               
  60   1              P0 = 0XFF;//清除断码
  61   1              WE = 1;//打开位选锁存器
  62   1              P0 = SMGwei[wei];
  63   1              WE = 0;//锁存位选数据
  64   1              switch(wei)
  65   1              {
  66   2                      case 0: DU = 1; P0 = SMGduan[i / 100]; DU = 0; break;
  67   2                      case 1: DU = 1; P0 = SMGduan[i % 100 / 10]; DU = 0; break;      
  68   2                      case 2: DU = 1; P0 = SMGduan[i % 10]; DU = 0; break;            
  69   2              }
  70   1              wei++;
  71   1              if(wei == 3)
  72   1                      wei = 0;
  73   1      }
  74          //定时器0初始化
  75          void timer0Init()
  76          {
  77   1              EA = 1; //打开总中断
  78   1              ET0 = 1;//打开定时器0中断
  79   1              TR0 = 1;         //启动定时器0
  80   1              TMOD |= 0X01; //定时器工作模式1，16位定时模式
  81   1              TH0 = 0xED;
  82   1              TL0 = 0xFF; //定时5ms
  83   1      }
  84          
  85          // 串口初始化
  86          void UARTInit()
  87          {
  88   1              EA = 1;
  89   1              ES = 1; // 打开串口中断
  90   1              SM0 = 0;
  91   1              SM1 = 1;  //串口工作方式1，8位UART波特率可变
  92   1              REN = 1;  // 串口允许接收
  93   1              TR1 = 1;  // 启动定时器1
  94   1              TMOD |= 0x20; // 定时器1，工作模式2 8位自动重装
  95   1              TH1 = 0xFD;
  96   1              TL1 = 0xfd;      // 设置波特率9600
  97   1      }
  98          
  99          void main()//main函数自身会循环
 100          {       
 101   1              timer0Init();//定时器0初始化
 102   1              UARTInit();  // 串口初始化
 103   1              while(1)
 104   1              {
 105   2                      TI = 1; // 
 106   2                      puts("大家好！欢迎学习单片机");
 107   2                      while(!TI);
 108   2                      TI = 0;
 109   2                      delay(1000);
 110   2              }       
 111   1      } 
 112          
 113          //定时器0中断函数
 114          void timer0() interrupt 1
 115          {
 116   1              TH0 = 0xED;
 117   1              TL0 = 0xFF; //定时5ms
C51 COMPILER V9.00   UART                                                                  03/16/2020 21:38:21 PAGE 3   

 118   1              display(num); //数码管显示函数  
 119   1      } 
 120          
 121          //void UART() interrupt 4
 122          //{
 123          //      uchar temp;
 124          //      if(RI)  // 判断接收是否完成
 125          //      {
 126          //              num = SBUF;     // 读SBUF，读出串口接收到的数据
 127          //              RI = 0; // 软件清零，接收标志位
 128          //              temp = num;
 129          //              SBUF = ++temp; // 写SBUF，把要发送的数据送给发送缓存器
 130          //      }
 131          //      if(TI) // 判断是否发送完成
 132          //              TI = 0; // 清零发送完成标志位
 133          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    216    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
