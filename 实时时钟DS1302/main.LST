C51 COMPILER V9.00   MAIN                                                                  03/28/2020 16:08:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define MAIN_Fosc               11059200UL      //宏定义主时钟HZ
   4          /*====================================
   5           自定义类型名
   6          ====================================*/
   7          typedef unsigned char INT8U;
   8          typedef unsigned char uchar;
   9          
  10          typedef unsigned int INT16U;
  11          typedef unsigned int uint;
  12          
  13          /*====================================
  14           硬件接口位声明
  15          ====================================*/
  16          sbit TSCLK = P1^0;//时钟线 接到P10上用杜邦线
  17          sbit TIO   = P1^1;//数据线，接到P11上
  18          sbit TRST  = P1^2;//使能端，接到P12上
  19          sbit DU  = P2^6;   //数码管段选
  20          sbit WE  = P2^7;   //数码管位选
  21          /*====================================
  22          共阴极数码管段选码
  23          ====================================*/
  24          uchar code table[]={ 
  25          //0             1        2     3     4     5     6     7     8
  26          0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F,
  27          //9     A     B    C     D         E     F              -        .        关显示
  28          0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71, 0x40, 0x80, 0x00
  29                             };
  30          
  31          /*====================================
  32          数码管位选码
  33          ====================================*/
  34                                            //第1位       2位       3位    4位   5位      6位       7位   8位
  35          uchar code T_COM[] = {0xfe, 0xfd, 0xfb, 0xf7, 0xef, 0xdf, 0xbf, 0x7f};//数码管位码
  36          
  37          /*====================================
  38          函数：void Delay_Ms(INT16U ms)
  39          参数：ms，毫秒延时形参
  40          描述：12T 51单片机自适应主时钟毫秒级延时函数
  41          ====================================*/
  42          void Delay_Ms(INT16U ms)
  43          {
  44   1           INT16U i;
  45   1               do{
  46   2                    i = MAIN_Fosc / 96000; 
  47   2                        while(--i);   //96T per loop
  48   2           }while(--ms);
  49   1      }
  50          
  51          void Display(uchar Hour, Min, Sec)
  52          {               
  53   1      //------------------------------
  54   1              DU = 0;                                                 
  55   1              P0 = table[Hour/10];            
C51 COMPILER V9.00   MAIN                                                                  03/28/2020 16:08:18 PAGE 2   

  56   1              DU = 1;                                         
  57   1              DU = 0;                                                 
  58   1      
  59   1              WE = 0;                                         
  60   1              P0 = T_COM[0];                             
  61   1              WE = 1;                                         
  62   1              WE = 0;                                         
  63   1              Delay_Ms(3);
  64   1      //-------------------------------
  65   1              DU = 0;
  66   1              P0 = table[Hour%10]|0x80; 
  67   1              DU = 1;
  68   1              DU = 0;
  69   1      
  70   1              WE = 0;
  71   1              P0 = T_COM[1];                    
  72   1              WE = 1;
  73   1              WE = 0;
  74   1              Delay_Ms(3);
  75   1      //------------------------------
  76   1              DU = 0;                                                 
  77   1              P0 = table[Min/10];             
  78   1              DU = 1;                                         
  79   1              DU = 0;                                                 
  80   1      
  81   1              WE = 0;                                         
  82   1              P0 = T_COM[2];                             
  83   1              WE = 1;                                         
  84   1              WE = 0;                                         
  85   1              Delay_Ms(3);
  86   1      //-------------------------------
  87   1              DU = 0;
  88   1              P0 = table[Min%10]|0x80; 
  89   1              DU = 1;
  90   1              DU = 0;
  91   1      
  92   1              WE = 0;
  93   1              P0 = T_COM[3];                   
  94   1              WE = 1;
  95   1              WE = 0;
  96   1              Delay_Ms(3);
  97   1      //------------------------------
  98   1              DU = 0;                                                 
  99   1              P0 = table[Sec/10];             
 100   1              DU = 1;                                         
 101   1              DU = 0;                                                 
 102   1      
 103   1              WE = 0;                                         
 104   1              P0 = T_COM[4];                             
 105   1              WE = 1;                                         
 106   1              WE = 0;                                         
 107   1              Delay_Ms(3);
 108   1      //-------------------------------
 109   1              DU = 0;
 110   1              P0 = table[Sec%10]; 
 111   1              DU = 1;
 112   1              DU = 0;
 113   1      
 114   1              WE = 0;
 115   1              P0 = T_COM[5];                    
 116   1              WE = 1;
 117   1              WE = 0;
C51 COMPILER V9.00   MAIN                                                                  03/28/2020 16:08:18 PAGE 3   

 118   1              Delay_Ms(3);
 119   1      
 120   1      }
 121          
 122          //写DS1302数据
 123          void Write_DS1302_DAT(uchar cmd, uchar dat)
 124          {
 125   1              uchar i;
 126   1              TRST = 0; //拉低使能端
 127   1              TSCLK = 0;//拉低数据总线
 128   1              TRST = 1; //拉高使能端，产生上升沿开始写数据
 129   1              for(i = 0; i < 8; i++)//每次写1位，写8次
 130   1              {
 131   2                      TSCLK = 0;                //拉低时钟总线
 132   2                      TIO = cmd & 0x01; //写1位数据，从最低位开始写
 133   2                      TSCLK = 1;                //拉高时钟总线，产生上升沿数据被DS1302读走
 134   2                      cmd >>=1;                 //右移一位
 135   2              }
 136   1              for(i = 0; i < 8; i++)//每次写1位，写8次
 137   1              {
 138   2                      TSCLK = 0;                //拉低时钟总线
 139   2                      TIO = dat & 0x01; //写1位数据，从最低位开始写
 140   2                      TSCLK = 1;                //拉高时钟总线，产生上升沿数据被DS1302读走
 141   2                      dat >>= 1;                //右移一位
 142   2              }
 143   1      }
 144          //读DS1302数据
 145          uchar Read_DS1302_DAT(uchar cmd)
 146          {
 147   1              uchar i, dat;
 148   1              TRST = 0;  //拉低使能端
 149   1              TSCLK = 0; //拉低数据总线
 150   1              TRST = 1;  //拉高使能端，产生上升沿开始写数据
 151   1              for(i = 0; i < 8; i++)//每次写1位，写8次
 152   1              {
 153   2                      TSCLK = 0;               //拉低时钟总线
 154   2                      TIO = cmd & 0x01;//写1位数据，从最低位开始写
 155   2                      TSCLK = 1;               //拉高时钟总线，产生上升沿数据被DS1302读走
 156   2                      cmd >>=1;                //右移一位
 157   2              }
 158   1              for(i = 0; i < 8; i++)//每次读1位，读8次
 159   1              {
 160   2                      TSCLK = 0;                //拉低时钟总线,产生下降沿，DS1302把数据放到TIO上
 161   2                      dat >>= 1;                //右移一位
 162   2                      if(TIO) dat |= 0x80;//读取数据，从最低位开始
 163   2                      TSCLK = 1;                      //拉高时钟总线，以备下一次产生下降沿
 164   2              }
 165   1              return dat;     //返回读出数据
 166   1      }
 167          
 168          //数据转BCD码
 169          uchar Dat_Chg_BCD(uchar dat)
 170          {
 171   1              uchar dat1, dat2;
 172   1              dat1 = dat / 10;
 173   1              dat2 = dat % 10;
 174   1              dat2 = dat2 + dat1 * 16;
 175   1              return dat2;
 176   1      }
 177          
 178          //BCD码转换为数据
 179          uchar BCD_Chg_Dat(uchar dat)
C51 COMPILER V9.00   MAIN                                                                  03/28/2020 16:08:18 PAGE 4   

 180          {
 181   1              uchar dat1, dat2;
 182   1              dat1 = dat / 16;
 183   1              dat2 = dat % 16;
 184   1              dat2 = dat2 + dat1 * 10;
 185   1              return dat2;
 186   1      }
 187          
 188          void main()
 189          {
 190   1              uchar i;
 191   1              uchar Sec, Min, Hour;
 192   1              Write_DS1302_DAT(0x8e, 0);//清除写保护
 193   1              Write_DS1302_DAT(0x80, Dat_Chg_BCD(30));//30秒（并且进行BCD码转换）
 194   1              Write_DS1302_DAT(0x82, Dat_Chg_BCD(15));//15分
 195   1              Write_DS1302_DAT(0x84, Dat_Chg_BCD(19));//19时
 196   1              Write_DS1302_DAT(0x8e, 0x80);//开写保护
 197   1              while(1)
 198   1              {
 199   2                      Write_DS1302_DAT(0x8e, 0); //清除写保护
 200   2                      Sec = BCD_Chg_Dat(Read_DS1302_DAT(0x81));//读秒寄存器（并且进行BCD码转换）
 201   2                      Min     = BCD_Chg_Dat(Read_DS1302_DAT(0x83));//读分寄存器
 202   2                      Hour = BCD_Chg_Dat(Read_DS1302_DAT(0x85));//读时寄存器
 203   2                      Write_DS1302_DAT(0x8e, 0x80);//开写保护
 204   2                      for(i = 0; i < 50; i++) //循环显示时钟
 205   2                              Display(Hour, Min, Sec);
 206   2      
 207   2              }
 208   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
